# This is MarkDown

## contents
* [**Headings**](#Headings) 
* [**Paragraphs**](#Paragraphs)  
* [**Line_Breaks**](#Line_Breaks)  
* [**Emphasis**](#Emphasis)  
* [**Blockquotes**](#Blockquotes)  
* [**Lists**](#Lists)  
* [**Code**](#Code)  
* [**Horizontal_Rules**](#Horizontal_Rules)  
* [**Links**](#Links)  
* [**Images**](#Images)  
* [**Escaping_Characters**](#Escaping_Characters)  
* [**HTML**](#HTML)  
* [**GFM_URL**](#GFM_URL)  

<br><br><br>
## **Headings**  

제목은 #의 연속으로 표현할 수 있다.  
#이 많아질 수록 작은 제목이 된다.

>**ex1)**  
># heading1  
>## heading2  
>### heading3  

<br><br><br>
## **Paragraphs**  
단락을 나눌 때는 일반 글쓰기 형식과는 다르게 단락 첫 문자의 띄어쓰기를 하지 않는다.  
>ex1)  
>1문단입니다.  
>
>2문단입니다.

<br><br><br>
## **Line_Breaks** 
줄바꿈은 2가지의 방법이 있다.  

1. 두 번의 스페이스바를 이용한 줄 바꿈  
>ex1)  
>첫 번째 문장  
>두 번째 문장

2. ```<br>```을 이용한 줄 바꿈  
>ex2)  
>첫 번째 문장<br>
>두 번째 문장

<br><br><br>  
## **Emphasis**
Markdown에서 단어를 강조하는 방법은 2가지가 있다.  

1. 굵은 글씨체로 강조하기 
>ex1)  
>일반 글씨체 >> **굵은 글씨체**  

2. 이탤릭체로 강조하기
>ex2)  
>일반 글씨체 >> *이탤릭체*  

* 추가적으로 굵은 글씨체와 이탤릭체는 함께 사용할 수 있다.  
>ex3)  
>일반 글씨체 >> ***굵은 이탤릭체***  


<br><br><br>
## **Blockquotes**  
인용구를 만들고 싶다면 문장을 시작할 때 ```>```기호를 입력하면 된다.  
위의 모든 예시들을 인용구로 처리했다.  
인용구 안에 인용구를 만들고 싶다면 ```>```기호를 중복 사용하면 된다.  
>ex1)  
>인용구  
>>인용구 안의 인용구  
>>>인용구 안의 인용구 안의 인용구  

<br><br><br>
## **Lists**  
파일을 보기좋게 정리하기 위한 몇 가지 기능이 있다.  

* 정렬  
정렬에는 번호 정렬과 점 정렬이 있다.  
번호 정렬은 말 그대로 번호를 매겨 정렬하는 것 이다.  
>ex1)  
>1. 첫 번째 줄  
>2. 두 번째 줄
>3. 세 번째 줄

점 정렬도 말 그대로 점을 나타내어 정렬하는 것 이다.  
>ex2)  
>- 첫 번째 줄
>- 두 번째 줄
>- 세 번째 줄

점 정렬을 응용할 수도 있다.
>ex3)  
>* 첫 번째 줄
>* 두 번째 줄  
>   * 들여쓰기  
>   * 들여쓰기
>* 세 번째 줄  

<br><br><br>
## **Adding elements in Lists**  
목록에는 몇 가지 추가할 수 있는 요소들이 존재한다.  
* 단락  
> ex1)  
> * 첫 번째 목록  
> * 두 번째 목록  
>   두 번째 목록의 단락
>  
> * 세 번째 목록  

* 인용구  
> ex2)  
> * 첫 번째 목록  
> * 두 번째 목록  
> > *인용구*  
> * 세 번째 목록  

* 코드 블록  
> ex3)  
> * 첫 번째 목록  
> * 두 번째 목록  
>   #include <stdio.h>  
>     int main()  
>     { printf("hello world");
>     return 0; }
> * 세 번째 목록  

* 이미지  
> ex4)
> * 첫 번째 목록  
> * 두 번째 목록  
>  ![Markdown](https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Markdown-mark.svg/1200px-Markdown-mark.svg.png)
> * 세 번째 목록  

<br><br>
### **Code**  
단어나 구를 코드로 표현하려면 ( ` )로 묶는다.  
> ex1)  
> 문자열 라이브러리를 사용하기 위해서는 `#include <string.h>`를 포함해야 한다.  

코드 블럭  

코드 블럭을 만들여면 모든 줄을 최소 1개의 탭으로 들여 써야한다.  

     <html>
       <head>
      </head>
    </html>

<br><br><br>
## **Horizontal_Rules**  
수평 라인을 만드려면 세 개 이상의 별표(***)나 대시(---), 밑줄(___)을 입력하면 됩니다.  

> ex1)  
> 첫 번째 문장  
> *** 
> 두 번째 문장  
> ___  
> 세 번째 문장  
> ___

<br><br><br>
## **Links**  
링크를 만드려면 대괄호 안에 링크를 걸 단어를 입력하고 소괄호에 주소를 넣으면 된다.  

>ex1)  
>[Markdown basic syntax](https://www.markdownguide.org/basic-syntax/)  

선택적으로 제목을 추가할 수 있다.  
>ex2)  
>[Markdown basic syntax](https://www.markdownguide.org/basic-syntax/ "Studying Markdown harder")  

URL 과 이메일 주소를 링크로 만들 수도 있다.  
>ex3)  
> <https://www.markdownguide.org/basic-syntax/>  
> <pppqqq99@naver.com>  

링크를 강조하기 위한 표현을 추가할 수 있다.  
>ex4)  
>마크다운 기본문법을 공부하려면 **[Markdown basic Syntax](https://www.markdownguide.org/basic-syntax/)** 를 클릭하시오.  
>마크다운을 심화학습하고 싶다면 *[Markdown Extended Syntax](https://www.markdownguide.org/extended-syntax/)* 를 클릭하시오.  

<br> 

### **Reference-style Links**  

참조 스타일 링크는 링크를 재사용하기 위한 기능이다.  

예시를 통해 직관적으로 알아보자.  
> ex5)
>```[MarkDown][1]```
>
>```[1]: https://www.markdownguide.>org/extended-syntax/  ```
>
>```[Markdown extended syntax][1]```

위의 코드를 코드블럭없이 실행하면 아래와 같다.  
>
>[MarkDown][1]
>
>[1]: https://www.markdownguide.>org/extended-syntax/  
>[Markdown extended syntax][1]

위의 코드를 보고 reference-style-Links가 어떻게 사용되는지 유추할 수 있다. 

*참조 스타일 링크는 **두 부분**으로 구성된다.*
 
* 링크의 첫 번째 부분

```[MarkDown][1]```

    1. 두 세트의 대괄호 형식으로 지정된다.  
    2. 첫 번째 대괄호 안에는 링크된 텍스트가 들어간다.  
    3. 두 번째 대괄호 안에는 파일의 다른 곳에 저장하는 링크를 표현하는 레이블을 표시한다.


* 링크의 두 번째 부분  

```[1]: https://www.markdownguide.>org/extended-syntax/```

    1. 링크 첫 번째 부분의 두 번째 대괄호 뒤에 콜론과 하나 이상의 콩백이 온다.  
    2. 그 뒤에 링크의 URL이 온다. (꺽쇠 괄호로 묶을 수 있음)  
    


첫 번째 부분 주의점  
    - 대괄호 사이에 공백을 포함할 수 있다.
    - 두 번째 대괄호 안의 레이블은 대소 문자를 구분하지 않으면 문자, 숫자, 공백 또는 점을 포함할 수 있다. 

 두 번째 부분 주의점  
    - URL 뒤에 제목을 붙일 수 있다. (큰 따옴표, 작은 따옴표, 소괄호)

<br><br><br>
## **Images**  

이미지를 추가하려면 느낌표, []안에 대체 텍스트, ()안에 이미지 자산의 경로 또는 URL을 추가 할 수 있다.  

> ex1)  
![Markdown](https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Markdown-mark.svg/1200px-Markdown-mark.svg.png)



<br>

### **Image linking**  

이미지에 링크를 추가하려면 이미지 주소를 대괄호로 묶고 연결하고 싶은 링크 주소를 괄호로 묶어 추가하면 된다.  
>ex2)  
[![Markdown](https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Markdown-mark.svg/1200px-Markdown-mark.svg.png)](https://www.markdownguide.org/)


<br><br><br>
## **Escaping_Characters** 

Markdown 문법에서 명령어로 사용되는 기호들이 있다.  
만약 그 기호를 화면에 그대로 출력하고 싶을 때 Escaping 문자를 사용하면 된다.  

<br>
나는 코드 내에서 ### heading을 출력하고 싶다. 
만약 Escaping 문자 없이 출력한다면 다음과 같이 출력된다.

> ex1)     
> ### heading
> Escaping 문자를 사용한다면  
> \### heading
> 을 문자 그대로 출력할 수 있다.

<br><br><br>
## **HTML**  
Markdown은 유용하게 사용되지만 상황에 따라서는 HTML이 더 알맞게 사용되는 경우가 있다.

> ex1)  
> This **word** is bold. This <em>word</em> is italic.

위 예시와 같이 텍스트를 꾸미거나 이미지 속성을 변경할 때 HTML을 Markdown과 적절하게 혼용하여 사용할 수 있다.  



<br><br><br>
## **GFM_URL**
GFM을 활용하여 Markdown의 확장 문법을 공부해보자!  
아래 링크를 눌러주세요!  
https://github.com/pppqqq99/git-love/blob/main/README.md


## **GFM**  

확장된 Markdown 문법에서는 표를 만들 수 있다.

| Syntax      | Description |
| ----------- | ----------- |
| Header      | Title       |
| Paragraph   | Text        |
위와 같이 |와 세 개 이상의-를 활용하여 표를 만들 수 있다. 위 코드를 탭 없이 나타내면 아래와 같이 표로 표현된다.

Syntax	Description
Header	Title
Paragraph	Text
표를 만들 때는 칸의 크기를 일일이 맞춰주지 않아도 자동으로 완성된다.

ex1)

  | Syntax      | Description |
  | -------- | ----------- |
  | Header | Title |
  | Paragraph  | Text     |
위 코드를 공백없이 나타내면 아래와 같이 자동으로 규격이 맞춰진다는 것을 알 수 있다.

Syntax	Description
Header	Title
Paragraph	Text
표를 만들 때는 때에 따라 정렬을 할 수 있다.
정렬을 하려면 :과 세 개 이상의 -를 사용하면 된다.

ex2)

  | Syntax    | Description | Test Text |  
  | :---      | :-------:   | ------:  |  
  | Header    | Title       | Heres this |  
위 코드를 공백없이 나타내면 다음과 같다.

Syntax	Description	Test Text
Header	Title	Heres this
위 코드와 표를 보고 정렬 방법을 직관적으로 알 수 있다.
정렬하고자 하는 방향에 :을 찍고 -를 세 개 이상 입력하면 정렬할 수 있다.
가운데 정렬을 하고 싶다면 -기호 세 개 이상과 그 양 옆에 :을 찍어주면 된다.


표 안에서 |기호를 사용하고 싶다면 Escaping 문자를 사용하면 된다.

ex3)
| f|oo | | ------ | | b \| az | | b | im |

위 예시를 공백없이 작성하면 아래와 같다.

f|oo
b | az
b | im
표를 만들 때 몇 가지 주의 점이 있다.

테이블에 포함하기 위해서는 시작할 때 반드시 |로 시작하여야 한다.
헤더 행의 셀 수는 구분 기호 행과 일치해야 한다.
테이블 행의 셀 수보다 적은 수의 셀이있는 경우 빈 셀이 삽입되고 더 큰 경우 초과는 무시된다.



Tesk List Items
Markdown 확장 문법에서는 작업 목록 항목을 만들 수 있다.
체크 박스는 대괄호와 대괄호 안에 공백 또는 x문자로 구성된다.

 foo
 bar
작업 목록 항목을 중복하여 만들 수도 있다.

 foo
 bar
 baz
 bim
경우에 따라 작업 목록을 활성화할 수도 있다.




Strikethrough
Markdown 확장 문법에서 글자의 가운데에 수평선을 그어 취소 선으로 표현할 수 있다.

ex1)
Markdown은 재미 없다.
공부하다 보니 재미있다!




Autolinks
Markdown 확장 문법에서는 URL을 괄호 없이 자동으로 링크 변환을 한다.

ex1)

[Markdown basic syntax](https://www.markdownguide.org/basic-syntax/)  
<https://www.markdownguide.org/basic-syntax/>  
https://www.markdownguide.org/basic-syntax/
위 코드를 `없이 입력하면 다음과 같이 나타난다.
Markdown basic syntax
https://www.markdownguide.org/basic-syntax/
https://www.markdownguide.org/basic-syntax/

괄호 없이도 자동 링크화 되는 것을 확인 할 수 있다.
자동 링크를 인식하기 위해 GFM은 확장 검사를 한다.
그 방법은 링크화 될 텍스트 형식에 따라 다르다.

www를 검사할 때는 www. 다음에 발견되는 유효 도메인의 형식을 검사한다. 그러면 자동으로 http가 삽입된다.
확장된 이메일 자동 링크는 이메일 주소가 텍스트 노드 내에서 인식된다.
따라서 경우에 맞게 활용하면 GFM에서 자동으로 링크를 생성해준다.




Disallowed Raw HTML
Markdown 기본 문법을 공부할 때 배웠듯이 상황에 따라 HTML을 혼용하는 것은 바람직한 방법이다.
하지만 GFM에서 HTML을 사용할 때 Markdown 컨텐츠 맥락에 맞지 않다고 판단되는 경우 HTML 태그의 실행을 막아주는 기능이 존재한다.

ex1)
<title> <style>

<xmp> is disallowed. <XMP> is also disallowed.
위 예시와 같이 몇몇 태그는 텍스트 그대로 출력이 된다.
이러한 태그는 정해져 있으니 알아 두 도록 하자.

<title>
<textarea>
<style>
<xmp>
<iframe>
<noembed>
<noframes>
<script>
<plaintext>
이 외의 모든 HTML태그는 혼용하여 사용할 수 있다.